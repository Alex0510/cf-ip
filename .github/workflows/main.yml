name: Fetch IP Addresses

on:
  # 每3小时运行一次
  schedule:
    - cron: '0 */3 * * *'
  # 允许手动触发
  workflow_dispatch:

jobs:
  fetch-ips:
    runs-on: ubuntu-latest
    
    # 需要写入权限
    permissions:
      contents: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests

    - name: Run IP fetcher script
      run: |
        cat > fetch_ips.py << 'EOF'
        import requests
        import re
        import time

        urls = [
            'https://ip.164746.xyz', 
            'https://cf.090227.xyz', 
            'https://stock.hostmonit.com/CloudFlareYes',
            'https://www.wetest.vip/page/cloudflare/address_v4.html'
        ]

        ip_pattern = r'\\b(?:[0-9]{1,3}\\.){3}[0-9]{1,3}\\b'
        unique_ips = set()

        for url in urls:
            try:
                headers = {'User-Agent': 'Mozilla/5.0'}
                resp = requests.get(url, headers=headers, timeout=10)
                if resp.status_code == 200:
                    matches = re.findall(ip_pattern, resp.text, re.IGNORECASE)
                    unique_ips.update(matches)
                    print(f"从 {url} 找到 {len(matches)} 个IP")
                else:
                    print(f"请求 {url} 失败: {resp.status_code}")
            except Exception as e:
                print(f"请求 {url} 出错: {e}")

        def get_country(ip):
            try:
                r = requests.get(f"http://ip-api.com/json/{ip}?lang=zh-CN", timeout=5)
                if r.status_code == 200:
                    data = r.json()
                    if data.get("status") == "success":
                        return data.get("country", "未知")
            except Exception as e:
                print(f"查询 {ip} 失败: {e}")
            return "未知"

        if unique_ips:
            sorted_ips = sorted(unique_ips, key=lambda ip: [int(p) for p in ip.split('.')])
            with open("ip.txt", "w", encoding="utf-8") as f:
                for ip in sorted_ips:
                    country = get_country(ip)
                    f.write(f"{ip}#{country}\\n")
                    time.sleep(1)  # 防止API调用太快被封
            print(f"保存 {len(sorted_ips)} 个 IP 到 ip.txt")
        else:
            with open("ip.txt", "w") as f:
                f.write("")
            print("没有找到有效IP")
        EOF
        
        python fetch_ips.py

    - name: Check for changes
      id: git-check
      run: |
        if git diff --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push if changed
      if: steps.git-check.outputs.changed == 'true'
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add ip.txt
        git commit -m "Auto-update IP addresses - $(date +'%Y-%m-%d %H:%M:%S')"
        git push
